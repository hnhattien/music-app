# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: Create .env for server
        run: |
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> music-app-server/.env
          echo "IMAGEKIT_PUBLIC_KEY=${{secrets.IMAGEKIT_PUBLIC_KEY}}" >> music-app-server/.env
          echo "IMAGEKIT_PRIVATE_KEY=${{secrets.IMAGEKIT_PRIVATE_KEY}}" >> music-app-server/.env
          echo "IMAGEKIT_URL_ENDPOINT=${{secrets.IMAGEKIT_URL_ENDPOINT}}" >> music-app-server/.env
          echo "UPCARE_SECRET_KEY=${{secrets.UPCARE_SECRET_KEY}}" >> music-app-server/.env
          echo "UPCARE_PUBLIC_KEY=${{secrets.UPCARE_PUBLIC_KEY}}" >> music-app-server/.env
          echo "MAILTRAP_TOKEN=${{secrets.MAILTRAP_TOKEN}}" >> music-app-server/.env
          echo "SENDER_EMAIL=${{secrets.SENDER_EMAIL}}" >> music-app-server/.env
          echo "CROSS_ORIGIN=${{secrets.CROSS_ORIGIN}}" >> music-app-server/.env
      - name: Create .env for client
        run: |
          echo "REACT_APP_API_URL=${{secrets.REACT_APP_API_URL}}" >> music-app-client/.env
          echo "REACT_APP_CDN_IMAGE_URL=${{secrets.REACT_APP_CDN_IMAGE_URL}}" >> music-app-client/.env
          echo "REACT_APP_FACEBOOK_APP_ID=${{secrets.REACT_APP_FACEBOOK_APP_ID}}" >> music-app-client/.env
      - name: Install Node.js
        uses: actions/setup-node@v3
      - run: sudo apt-get install curl
      - run: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      - run: |
          export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
      - run: nvm install 14
      - run: nvm use 14
      - run: cd music-app-server
      - run: npm install
      - run: npm run build --if-present
      - run: npm install -g pm2
      - run: npm cd ../music-app-client
      - run: npm install
      - run: npm run build --if-present
